@using MfePoc.Generation.Contract 
@{
    this.SetAppLayout(
        title: "Dashboard",
        baseUrl: "/Dashboard/");
}

<p>
    This is the colour factory Dashboard.
</p>
<p>
    The main view is rendered using server-side MVC, but the colour controls are served (in iFrames) from
    the other modules.
</p>

<div class="container">

    <div class="row">

        <div class="col-sm-6">
            @GenerationControls.ColourGenerators()
        </div>

        <div class="col-sm-6">
            @GenerationControls.StockLevels()
        </div>

    </div>

</div>

Messages:
<div>
    <textarea id="messages" rows="6" cols="80" style="font-size: smaller">
    </textarea>
</div>

<p>
    This page was rendered from process Id=@System.Diagnostics.Process.GetCurrentProcess().Id Framework=@System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription
</p>

@section Scripts {
    <script>

        $(function () {
            var hub = new signalR.HubConnectionBuilder()
                .withUrl("/Dashboard/hub")
                .build();

            hub.on("notify", function (message) {
                notify(message);
            });

            hub.start().then(function () {
                notify("Dashboard started");
            });

            window.setInterval(clearMessage, 1500);
        });

        function notify(message) {
            var text = $('#messages').text();
            var message = formatDate(message) + '\n' + text;
            $('#messages').text(message);
        }

        function clearMessage() {
            var text = $('#messages').text();
            var lastLine = text.lastIndexOf('\n');

            if (lastLine > 0) {
                text = text.slice(0, lastLine);
            } else {
                text = '';
            }

            $('#messages').text(text);
        }

        function formatDate(message) {
            var date = new Date();
            var hours = leadingZero(date.getHours());
            var minutes = leadingZero(date.getMinutes());
            var seconds = leadingZero(date.getSeconds());
            var time = hours + ':' + minutes + ':' + seconds + '.' + date.getMilliseconds();
            return time + ' - ' + message;
        }

        function leadingZero(value) {
            return value < 10 ? '0' + value : value;
        }

    </script>
} 