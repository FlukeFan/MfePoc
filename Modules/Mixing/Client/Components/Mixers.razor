@inject NavigationManager NavManager
@inject IJSRuntime Js

<button class="btn btn-warning" @onclick=@GenerateYellow>Generate Yellow</button>
<div style="padding-top:8px"></div>
<button class="btn btn-info" @onclick=@GenerateCyan>Generate Cyan</button>
<div style="padding-top:8px"></div>
<button class="btn btn-magenta" @onclick=@GenerateMagenta>Generate Magenta</button>

@code {

    private ClientHub _hub;

    protected override async Task OnInitializedAsync()
    {
        _hub = await ClientHub.GetStartedHubAsync(NavManager);
    }

    private async Task GenerateYellow()
    {
        var message = await MixAsync(red: 1, green: 1, blue: 0);
        await NotifyAsync(message);
    }

    private async Task GenerateCyan()
    {
        var message = await MixAsync(red: 0, green: 1, blue: 1);
        await NotifyAsync(message);
    }

    private async Task GenerateMagenta()
    {
        var message = await MixAsync(red: 1, green: 0, blue: 1);
        await NotifyAsync(message);
    }

    private async Task<string> MixAsync(int red, int green, int blue)
    {
        while (_hub == null)
            await Task.Delay(100);

        return await _hub.RequestMixAsync(red, green, blue);
    }

    private async Task NotifyAsync(string message)
    {
        if (!string.IsNullOrWhiteSpace(message))
        {
            await Js.InvokeVoidAsync("mfeNotify", message);
        }
    }
}
